

import bs4
import telebot
from telebot import types
import requests
from menuBot import Menu


bot = telebot.TeleBot('5205850102:AAF93gC5k5FoDVQOmZU3BFdN4GkE7rMtZTc')

game21 = None

@bot.message_handler(commands=["start"])
def start(message, res=False):
    chat_id = message.chat.id

def command(message, res=False):
    txt_message = f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! –Ø —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç –¥–ª—è –∫—É—Ä—Å–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ —è–∑—ã–∫–µ –ü–∞–π—Ç–æ–Ω"
    bot.send_message(message.chat.id, text=txt_message,
reply_markup=Menu.getMenu("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é".markup)


    bot.send_message(chat_id,
                     text="–ü—Ä–∏–≤–µ—Ç, {0.first_name}! –Ø —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç –¥–ª—è –∫—É—Ä—Å–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ —è–∑—ã–∫–µ –ü–∞–π—Ç–æ–Ω".format(
                         message.from_user))



@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    chat_id = message.chat.id
    ms_text = message.text

# ----------------------------------------------------------------------------------------------------------------------


    if ms_text == "üëã –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é" or ms_text == "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é" or ms_text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é" \
            or ms_text == "–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è")
        btn2 = types.KeyboardButton("1 –£—Ä–æ–∫")
        btn3 = types.KeyboardButton("–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–∞—Ä–æ–ª—å")
        back = types.KeyboardButton("–ü–æ–º–æ—â—å")
        markup.add(btn1, btn2, btn3, back)
        bot.send_message(chat_id, text="–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é", reply_markup=markup)

    elif ms_text == "–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("–ü—Ä–∏—Å–ª–∞—Ç—å —Å–æ–±–∞–∫—É")
        btn2 = types.KeyboardButton("–ü—Ä–∏—Å–ª–∞—Ç—å –∞–Ω–µ–∫–¥–æ—Ç")
        back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(btn1, btn2, back)
        bot.send_message(chat_id, text="–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", reply_markup=markup)

    elif ms_text == "1 –£—Ä–æ–∫":
        bot.send_message(chat_id, text="–µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤–æ))")

    elif ms_text == "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–∞—Ä–æ–ª—å":
        bot.send_message(chat_id, text=get_fact())

    elif ms_text == "–ü–æ–º–æ—â—å" or ms_text == "/help":
        bot.send_message(chat_id, text="–ê–≤—Ç–æ—Ä: –ü–µ—Ç—Ä—É—à–∏–Ω–∞ –ï–≤–≥–µ–Ω–∏—è")
        key1 = types.InlineKeyboardMarkup()
        btn1 = types.InlineKeyboardButton(text="–ù–∞–ø–∏—à–∏—Ç–µ –∞–≤—Ç–æ—Ä—É", url="https://t.me/evgptr")
        key1.add(btn1)
        img = open('–∫–æ—Ç1.jpg', 'rb')
        bot.send_photo(message.chat.id, img, reply_markup=key1)

    # ----------------------------------------------------------------------------------------------------------------------

    # ----------------------------------------------------------------------------------------------------------------------

    elif ms_text == "/dog" or ms_text == "–ü—Ä–∏—Å–ª–∞—Ç—å —Å–æ–±–∞–∫—É":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("–ö—Ä–∞—Å–∏–≤—É—é")
        btn2 = types.KeyboardButton("–°–º–µ—à–Ω—É—é")
        btn3 = types.KeyboardButton("–î—Ä—É–≥—É—é")
        back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(btn1, btn2, btn3, back)
        bot.send_message(chat_id, text="–ö–∞–∫—É—é —Å–æ–±–∞–∫—É?", reply_markup=markup)

    elif ms_text == "–ö—Ä–∞—Å–∏–≤—É—é":
        img = open('—Å–æ–±–∞–∫–∞4.jpg', 'rb')
        bot.send_photo(message.chat.id, img)

    elif ms_text == "–°–º–µ—à–Ω—É—é":
        img = open('—Å–æ–±–∞–∫–∞1.jpg', 'rb')
        bot.send_photo(message.chat.id, img)

    elif ms_text == "–î—Ä—É–≥—É—é":
        contents = requests.get('https://random.dog/woof.json').json()
        urlDOG = contents['url']
        bot.send_photo(chat_id, photo=urlDOG, caption="–í–æ—Ç —Ç–µ–±–µ —Å–æ–±–∞—á–∫–∞")
    # ----------------------------------------------------------------------------------------------------------------------

    # ----------------------------------------------------------------------------------------------------------------------

    elif ms_text == "–ü—Ä–∏—Å–ª–∞—Ç—å –∞–Ω–µ–∫–¥–æ—Ç":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("–ü—Ä–æ —Å–ª–æ–Ω–∞")
        btn2 = types.KeyboardButton("–°–ª—É—á–∞–π–Ω—ã–π –∞–Ω–µ–∫–¥–æ—Ç")
        back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(btn1, btn2, back)
        bot.send_message(chat_id, text="–ö–∞–∫–æ–π –∞–Ω–µ–∫–¥–æ—Ç?", reply_markup=markup)
    elif ms_text == "–ü—Ä–æ —Å–ª–æ–Ω–∞":
        bot.send_message(chat_id, text="- –ë–ª–∏–Ω! - —Å–∫–∞–∑–∞–ª —Å–ª–æ–Ω, –Ω–∞—Å—Ç—É–ø–∏–≤ –Ω–∞ –∫–æ–ª–æ–±–∫–∞.")
    elif ms_text == "–°–ª—É—á–∞–π–Ω—ã–π –∞–Ω–µ–∫–¥–æ—Ç":
        bot.send_message(chat_id, text=get_anekdot())
    else:
        bot.send_message(chat_id, text="–Ø —Ç–µ–±—è —Å–ª—ã—à—É!!! –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: "
                                       + ms_text)


# ----------------------------------------------------------------------------------------------------------------------

def get_anekdot():
    array_anekdots = []
    req_anek = requests.get('http://anekdotme.ru/random')
    soup = bs4.BeautifulSoup(req_anek.text, "html.parser")
    result_find = soup.select('.anekdot_text')
    for result in result_find:
        array_anekdots.append(result.getText().strip())
    return array_anekdots[0]


def get_fact():
    array_facts = []
    req_fact = requests.get('https://randstuff.ru/password/')
    soup = bs4.BeautifulSoup(req_fact.text, "html.parser")
    result_find = soup.select('.cur')
    for result in result_find:
        array_facts.append(result.getText().strip())
    return array_facts[0]


# ----------------------------------------------------------------------------------------------------------------------
bot.polling(none_stop=True, interval=0)